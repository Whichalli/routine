import 'controller/viewroutine_feeding_solids_controller.dart';import 'models/viewroutine_feeding_solids_model.dart';import 'package:alli_s_application7/core/app_export.dart';import 'package:alli_s_application7/widgets/custom_button.dart';import 'package:alli_s_application7/widgets/custom_icon_button.dart';import 'package:alli_s_application7/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class ViewroutineFeedingSolidsPage extends StatelessWidget {ViewroutineFeedingSolidsPage({Key? key}) : super(key: key);

ViewroutineFeedingSolidsController controller = Get.put(ViewroutineFeedingSolidsController(ViewroutineFeedingSolidsModel().obs));

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: Colors.transparent, body: SizedBox(width: size.width, child: SingleChildScrollView(child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 14, top: 20, right: 64), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(left: 30), child: Row(mainAxisAlignment: MainAxisAlignment.end, children: [GestureDetector(onTap: () {onTapDatetime();}, child: Container(width: getHorizontalSize(151), padding: getPadding(left: 18, top: 15, right: 18, bottom: 15), decoration: AppDecoration.outlineBlue5001.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(width: getHorizontalSize(58), margin: getMargin(top: 3), child: Obx(() => Text(controller.viewroutineFeedingSolidsModelObj.value.inputTxt.value, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtManropeRegular16))), CustomImageView(svgPath: ImageConstant.imgCalendar, height: getSize(24), width: getSize(24), margin: getMargin(left: 31, top: 12, bottom: 12))]))), GestureDetector(onTap: () {onTapDatetime1();}, child: Container(width: getHorizontalSize(151), margin: getMargin(left: 27), padding: getPadding(left: 18, top: 15, right: 18, bottom: 15), decoration: AppDecoration.outlineBlue5001.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(width: getHorizontalSize(58), margin: getMargin(top: 3), child: Obx(() => Text(controller.viewroutineFeedingSolidsModelObj.value.inputoneTxt.value, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtManropeRegular16))), CustomImageView(svgPath: ImageConstant.imgCalendar, height: getSize(24), width: getSize(24), margin: getMargin(left: 31, top: 12, bottom: 12))])))]))), Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(top: 16, right: 3), child: Text("msg_solids_tracking".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSansLight24))), Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(top: 9, right: 16), child: Text("msg_start_tracking_solids".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoRegular12))), Padding(padding: getPadding(left: 3, top: 11, right: 17), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 2), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomIconButton(height: 52, width: 52, variant: IconButtonVariant.FillGreen50, shape: IconButtonShape.CircleBorder27, child: CustomImageView(svgPath: ImageConstant.imgGlobe)), Padding(padding: getPadding(top: 10), child: Text("lbl_broccoli".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium10))])), Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomIconButton(height: 52, width: 52, variant: IconButtonVariant.FillDeeporange50, shape: IconButtonShape.CircleBorder27, padding: IconButtonPadding.PaddingAll12, child: CustomImageView(svgPath: ImageConstant.imgGroup)), Padding(padding: getPadding(top: 12), child: Text("lbl_apple".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium10))]), Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomIconButton(height: 52, width: 52, variant: IconButtonVariant.FillOrange5001, shape: IconButtonShape.CircleBorder27, child: CustomImageView(svgPath: ImageConstant.imgBeverage1)), Padding(padding: getPadding(top: 12), child: Text("lbl_beverages".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium10))]), Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomIconButton(height: 52, width: 52, variant: IconButtonVariant.FillGray10001, shape: IconButtonShape.CircleBorder27, padding: IconButtonPadding.PaddingAll12, child: CustomImageView(svgPath: ImageConstant.imgTelevision)), Padding(padding: getPadding(top: 12), child: Text("lbl_cupcakes".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium10))]), Padding(padding: getPadding(bottom: 1), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomIconButton(height: 52, width: 52, variant: IconButtonVariant.FillTeal50, shape: IconButtonShape.CircleBorder27, child: CustomImageView(svgPath: ImageConstant.imgLightbulb)), Padding(padding: getPadding(top: 11), child: Text("lbl_water".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium10))]))])), CustomTextFormField(width: getHorizontalSize(185), focusNode: FocusNode(), autofocus: true, controller: controller.othersController, hintText: "msg_others_please_state".tr, margin: getMargin(left: 6, top: 8), shape: TextFormFieldShape.CircleBorder18, padding: TextFormFieldPadding.PaddingAll11, textInputAction: TextInputAction.done), Padding(padding: getPadding(top: 8), child: Text("lbl_add_a_reaction".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsSemiBold18)), Padding(padding: getPadding(top: 136), child: Text("msg_add_a_note_and_a".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoRegular16)), CustomButton(height: getVerticalSize(37), width: getHorizontalSize(165), text: "msg_choose_image_from".tr, margin: getMargin(top: 14), variant: ButtonVariant.FillPinkA10035, shape: ButtonShape.RoundedBorder6, padding: ButtonPadding.PaddingAll10, fontStyle: ButtonFontStyle.LatoRegular12), Padding(padding: getPadding(left: 8, top: 31), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgVuesaxoutlinebrush, height: getVerticalSize(18), width: getHorizontalSize(25), margin: getMargin(bottom: 5)), Padding(padding: getPadding(left: 10, top: 3), child: Text("msg_add_for_another2".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoRegular16))])), CustomButton(height: getVerticalSize(64), width: getHorizontalSize(129), text: "lbl_save".tr, margin: getMargin(top: 56, right: 106), variant: ButtonVariant.FillPink400, shape: ButtonShape.CircleBorder32, fontStyle: ButtonFontStyle.PoppinsRegular24, alignment: Alignment.centerRight)])))]))))); } 

/// Displays a date picker dialog and updates the selected date in the
/// [viewroutineFeedingSolidsModelObj] object of the current [inputTxt] if the user 
/// selects a valid date.
///
/// This function returns a `Future` that completes with `void`.
Future<void> onTapDatetime() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.viewroutineFeedingSolidsModelObj.value.selectedInputTxt!.value , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.viewroutineFeedingSolidsModelObj.value.selectedInputTxt!.value = dateTime;controller.viewroutineFeedingSolidsModelObj.value.inputTxt.value = dateTime.format(dateTimeFormatPattern);} } 

/// Displays a date picker dialog and updates the selected date in the
/// [viewroutineFeedingSolidsModelObj] object of the current [inputoneTxt] if the user 
/// selects a valid date.
///
/// This function returns a `Future` that completes with `void`.
Future<void> onTapDatetime1() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.viewroutineFeedingSolidsModelObj.value.selectedInputoneTxt!.value , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.viewroutineFeedingSolidsModelObj.value.selectedInputoneTxt!.value = dateTime;controller.viewroutineFeedingSolidsModelObj.value.inputoneTxt.value = dateTime.format(dateTimeFormatPattern);} } 
 }
