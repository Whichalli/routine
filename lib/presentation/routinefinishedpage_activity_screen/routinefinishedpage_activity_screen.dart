import 'controller/routinefinishedpage_activity_controller.dart';import 'package:alli_s_application7/core/app_export.dart';import 'package:alli_s_application7/widgets/app_bar/appbar_image.dart';import 'package:alli_s_application7/widgets/app_bar/appbar_subtitle.dart';import 'package:alli_s_application7/widgets/app_bar/custom_app_bar.dart';import 'package:alli_s_application7/widgets/custom_button.dart';import 'package:alli_s_application7/widgets/custom_icon_button.dart';import 'package:alli_s_application7/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class RoutinefinishedpageActivityScreen extends GetWidget<RoutinefinishedpageActivityController> {const RoutinefinishedpageActivityScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: ColorConstant.gray100, appBar: CustomAppBar(height: getVerticalSize(94), leadingWidth: 71, leading: AppbarImage(height: getVerticalSize(33), width: getHorizontalSize(31), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 40, top: 13, bottom: 9), onTap: () {onTapArrowleft2();}), centerTitle: true, title: AppbarSubtitle(text: "lbl_last_activity".tr), actions: [AppbarImage(height: getSize(40), width: getSize(40), svgPath: ImageConstant.imgClose, margin: getMargin(left: 32, top: 5, right: 32, bottom: 10))]), body: SizedBox(width: size.width, child: SingleChildScrollView(padding: getPadding(top: 30), child: Padding(padding: getPadding(left: 24, right: 37, bottom: 5), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [GestureDetector(onTap: () {onTapDatetime();}, child: Container(margin: getMargin(left: 4, right: 27), padding: getPadding(left: 18, top: 16, right: 18, bottom: 16), decoration: AppDecoration.outlineBlue5001.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(left: 2, top: 4), child: Obx(() => Text(controller.routinefinishedpageActivityModelObj.value.inputTxt.value, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtManropeRegular16))), CustomImageView(svgPath: ImageConstant.imgCalendar, height: getSize(24), width: getSize(24), margin: getMargin(top: 1, bottom: 1))]))), GestureDetector(onTap: () {onTapDatetime1();}, child: Container(margin: getMargin(left: 4, top: 10, right: 27), padding: getPadding(all: 18), decoration: AppDecoration.outlineBlue5001.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(left: 2, top: 1), child: Obx(() => Text(controller.routinefinishedpageActivityModelObj.value.inputoneTxt.value, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtManropeRegular16))), CustomImageView(svgPath: ImageConstant.imgCalendar, height: getSize(24), width: getSize(24))]))), Align(alignment: Alignment.center, child: Container(height: getVerticalSize(209), width: getHorizontalSize(190), margin: getMargin(top: 16), child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.topCenter, child: Text("lbl_or_start_timer".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoRegular16)), Align(alignment: Alignment.bottomCenter, child: Container(padding: getPadding(all: 5), decoration: AppDecoration.fillBluegray10001.copyWith(borderRadius: BorderRadiusStyle.circleBorder95), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Container(padding: getPadding(left: 50, right: 50), decoration: AppDecoration.brand.copyWith(borderRadius: BorderRadiusStyle.circleBorder90), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [Padding(padding: getPadding(top: 76), child: Text("lbl_00_00_00".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSansRomanSemiBold18.copyWith(letterSpacing: getHorizontalSize(1.0)))), CustomImageView(svgPath: ImageConstant.imgPlayWhiteA700, height: getSize(40), width: getSize(40), margin: getMargin(top: 38))]))])))]))), Padding(padding: getPadding(left: 23, top: 30), child: Text("msg_add_a_note_and_a2".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoRegular16)), CustomButton(height: getVerticalSize(37), width: getHorizontalSize(165), text: "msg_choose_image_from".tr, margin: getMargin(left: 19, top: 4), variant: ButtonVariant.FillPinkA10035, shape: ButtonShape.RoundedBorder6, padding: ButtonPadding.PaddingAll10, fontStyle: ButtonFontStyle.LatoRegular12), CustomTextFormField(focusNode: FocusNode(), autofocus: true, controller: controller.describeactivitController, hintText: "msg_describe_activities".tr, margin: getMargin(left: 16, top: 12, right: 2), textInputAction: TextInputAction.done, alignment: Alignment.center), Container(margin: getMargin(top: 7, right: 3), padding: getPadding(all: 15), decoration: AppDecoration.white.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(left: 3), child: Text("lbl_start_time".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSansLight24)), Text("lbl_7_30_am".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSans24Black90059)])), Container(margin: getMargin(left: 2, right: 1), padding: getPadding(all: 15), decoration: AppDecoration.white.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(left: 3), child: Text("lbl_end_time".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSansLight24)), Text("lbl_7_30_am".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSans24Black90059)])), Container(margin: getMargin(left: 3), padding: getPadding(all: 15), decoration: AppDecoration.white.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(left: 3), child: Text("lbl_total_time".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSansLight24)), Text("lbl_00_00".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSans24Black90059)])), CustomIconButton(height: 46, width: 48, margin: getMargin(top: 70), variant: IconButtonVariant.FillPink400, shape: IconButtonShape.CircleBorder24, padding: IconButtonPadding.PaddingAll6, alignment: Alignment.center, child: CustomImageView(svgPath: ImageConstant.imgCheck))])))))); } 

/// Displays a date picker dialog and updates the selected date in the
/// [routinefinishedpageActivityModelObj] object of the current [inputTxt] if the user 
/// selects a valid date.
///
/// This function returns a `Future` that completes with `void`.
Future<void> onTapDatetime() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.routinefinishedpageActivityModelObj.value.selectedInputTxt!.value , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.routinefinishedpageActivityModelObj.value.selectedInputTxt!.value = dateTime;controller.routinefinishedpageActivityModelObj.value.inputTxt.value = dateTime.format(dateTimeFormatPattern);} } 

/// Displays a date picker dialog and updates the selected date in the
/// [routinefinishedpageActivityModelObj] object of the current [inputoneTxt] if the user 
/// selects a valid date.
///
/// This function returns a `Future` that completes with `void`.
Future<void> onTapDatetime1() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.routinefinishedpageActivityModelObj.value.selectedInputoneTxt!.value , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.routinefinishedpageActivityModelObj.value.selectedInputoneTxt!.value = dateTime;controller.routinefinishedpageActivityModelObj.value.inputoneTxt.value = dateTime.format(dateTimeFormatPattern);} } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] library to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleft2() { Get.back(); } 
 }
